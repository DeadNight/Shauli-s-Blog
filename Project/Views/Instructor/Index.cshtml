@model Project.ViewModels.InstructorIndexData
@using Project.Models

@{
    ViewBag.Title = "Instructors";
}

<h2>Instructors</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Instructor", new { id = ViewBag.InstructorID, courseId = ViewBag.CourseID }, FormMethod.Get))
{
    <p>
        Find by
        name: @Html.TextBox("NameFilter", ViewBag.NameFilter as String)
        office: @Html.TextBox("OfficeFilter", ViewBag.OfficeFilter as String)
        course:
        <select name="CourseFilter">
            <option></option>
            @foreach (Course course in ViewBag.AllCourses)
            {
                <option value="@course.CourseID" @(ViewBag.CourseFilter == course.CourseID ? "selected" : "")>
                    @course.Title
                </option>
            }
        </select>
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Instructors.FirstOrDefault().LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Instructors.FirstOrDefault().FirstMidName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Instructors.FirstOrDefault().HireDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Instructors.FirstOrDefault().OfficeAssignment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Instructors.FirstOrDefault().Courses)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.Instructors) {
    string selectedRow = "";
    if(item.ID == ViewBag.InstructorID)
    {
        selectedRow = "success";
    }
    <tr class="@selectedRow">
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstMidName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HireDate)
        </td>
        <td>
            @if (item.OfficeAssignment != null)
            {
                @Html.DisplayFor(modelItem => item.OfficeAssignment.Location)
            }
        </td>
        <td>
            @{ 
                foreach(var course in item.Courses)
                {
                    @course.CourseID @: @course.Title <br />
                }
            }
        </td>
        <td>
            @Html.ActionLink("Select", "Index", new { id = item.ID, nameFilter = ViewBag.NameFilter, officeFilter = ViewBag.OfficeFilter, courseFilter = ViewBag.CourseFilter }) |
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>

@if(Model.Courses != null)
{
    <h3>Courses Taught by Selected Instructor</h3>
    <table class="table">
        <tr>
            <th></th>
            <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().CourseID)</th>
            <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().Title)</th>
            <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().Department)</th>
        </tr>
        @foreach(var item in Model.Courses)
        {
            string selectedRow = "";
            if(item.CourseID == ViewBag.CourseID)
            {
                selectedRow = "success";
            }
            <tr class="@selectedRow">
                <td>
                    @Html.ActionLink("Select", "Index", new { courseId = item.CourseID, nameFilter = ViewBag.NameFilter, officeFilter = ViewBag.OfficeFilter, courseFilter = ViewBag.CourseFilter })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department.Name)
                </td>
            </tr>
        }
    </table>
}

@if(Model.Enrollments != null)
{
    <h3>
        Students Enrolled in Selected Course
    </h3>
    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Enrollments.FirstOrDefault().Student.FullName)</th>
            <th>@Html.DisplayNameFor(model => model.Enrollments.FirstOrDefault().Grade)</th>
        </tr>
        @foreach(var item in Model.Enrollments)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade)
                </td>
            </tr>
        }
    </table>
}